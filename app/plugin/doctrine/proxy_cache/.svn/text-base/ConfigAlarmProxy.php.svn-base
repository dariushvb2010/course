<?php

namespace CustomsReview\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ConfigAlarmProxy extends \ConfigAlarm implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function Title()
    {
        $this->__load();
        return parent::Title();
    }

    public function RTitle()
    {
        $this->__load();
        return parent::RTitle();
    }

    public function Context()
    {
        $this->__load();
        return parent::Context();
    }

    public function Moratorium()
    {
        $this->__load();
        return parent::Moratorium();
    }

    public function MoratoriumToSeccond()
    {
        $this->__load();
        return parent::MoratoriumToSeccond();
    }

    public function AlarmAuto()
    {
        $this->__load();
        return parent::AlarmAuto();
    }

    public function User()
    {
        $this->__load();
        return parent::User();
    }

    public function AddUser($User)
    {
        $this->__load();
        return parent::AddUser($User);
    }

    public function Group()
    {
        $this->__load();
        return parent::Group();
    }

    public function AddGroup($Group)
    {
        $this->__load();
        return parent::AddGroup($Group);
    }

    public function Maker()
    {
        $this->__load();
        return parent::Maker();
    }

    public function AddMaker($Maker)
    {
        $this->__load();
        return parent::AddMaker($Maker);
    }

    public function Killer()
    {
        $this->__load();
        return parent::Killer();
    }

    public function AddKiller($Killer)
    {
        $this->__load();
        return parent::AddKiller($Killer);
    }

    public function ID()
    {
        $this->__load();
        return parent::ID();
    }

    public function DeleteAccess()
    {
        $this->__load();
        return parent::DeleteAccess();
    }

    public function Comment()
    {
        $this->__load();
        return parent::Comment();
    }

    public function SetComment($Comment)
    {
        $this->__load();
        return parent::SetComment($Comment);
    }

    public function Style()
    {
        $this->__load();
        return parent::Style();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'ID', 'DeleteAccess', 'Comment', 'Style', 'Title', 'Context', 'Moratorium', 'AlarmAuto', 'User', 'Group', 'Maker', 'Killer');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}
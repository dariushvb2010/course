<?php

namespace CustomsReview\Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ConfigEventProxy extends \ConfigEvent implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function EventName()
    {
        $this->__load();
        return parent::EventName();
    }

    public function PersianName()
    {
        $this->__load();
        return parent::PersianName();
    }

    public function ChildAlarm()
    {
        $this->__load();
        return parent::ChildAlarm();
    }

    public function SlainAlarmFree()
    {
        $this->__load();
        return parent::SlainAlarmFree();
    }

    public function AddSlainAlarmFree($Alarm)
    {
        $this->__load();
        return parent::AddSlainAlarmFree($Alarm);
    }

    public function ChildConfigAlarm()
    {
        $this->__load();
        return parent::ChildConfigAlarm();
    }

    public function AddChildConfigAlarm(\ConfigAlarm $CA)
    {
        $this->__load();
        return parent::AddChildConfigAlarm($CA);
    }

    public function SlainConfigAlarm()
    {
        $this->__load();
        return parent::SlainConfigAlarm();
    }

    public function AddSlainConfigAlarm(\ConfigAlarm $Alarm)
    {
        $this->__load();
        return parent::AddSlainConfigAlarm($Alarm);
    }

    public function ID()
    {
        $this->__load();
        return parent::ID();
    }

    public function DeleteAccess()
    {
        $this->__load();
        return parent::DeleteAccess();
    }

    public function Comment()
    {
        $this->__load();
        return parent::Comment();
    }

    public function SetComment($Comment)
    {
        $this->__load();
        return parent::SetComment($Comment);
    }

    public function Style()
    {
        $this->__load();
        return parent::Style();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'ID', 'DeleteAccess', 'Comment', 'Style', 'EventName', 'PersianName', 'ChildAlarm', 'SlainAlarmFree', 'ChildConfigAlarm', 'SlainConfigAlarm');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}